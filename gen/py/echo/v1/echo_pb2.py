# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: echo/v1/echo.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='echo/v1/echo.proto',
  package='skeleton.echo.v1',
  syntax='proto3',
  serialized_options=b'Z+github.com/kzmake/skeleton/api/echo/v1;echo',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x12\x65\x63ho/v1/echo.proto\x12\x10skeleton.echo.v1\x1a\x1cgoogle/api/annotations.proto\"\x1f\n\x0b\x45\x63hoRequest\x12\x10\n\x03msg\x18\x01 \x01(\tR\x03msg\" \n\x0c\x45\x63hoResponse\x12\x10\n\x03msg\x18\x01 \x01(\tR\x03msg2g\n\x04\x45\x63ho\x12_\n\x04\x45\x63ho\x12\x1d.skeleton.echo.v1.EchoRequest\x1a\x1e.skeleton.echo.v1.EchoResponse\"\x18\x82\xd3\xe4\x93\x02\x12\"\r/echo/v1/echo:\x01*B-Z+github.com/kzmake/skeleton/api/echo/v1;echob\x06proto3'
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,])




_ECHOREQUEST = _descriptor.Descriptor(
  name='EchoRequest',
  full_name='skeleton.echo.v1.EchoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg', full_name='skeleton.echo.v1.EchoRequest.msg', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='msg', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=70,
  serialized_end=101,
)


_ECHORESPONSE = _descriptor.Descriptor(
  name='EchoResponse',
  full_name='skeleton.echo.v1.EchoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg', full_name='skeleton.echo.v1.EchoResponse.msg', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='msg', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=103,
  serialized_end=135,
)

DESCRIPTOR.message_types_by_name['EchoRequest'] = _ECHOREQUEST
DESCRIPTOR.message_types_by_name['EchoResponse'] = _ECHORESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

EchoRequest = _reflection.GeneratedProtocolMessageType('EchoRequest', (_message.Message,), {
  'DESCRIPTOR' : _ECHOREQUEST,
  '__module__' : 'echo.v1.echo_pb2'
  # @@protoc_insertion_point(class_scope:skeleton.echo.v1.EchoRequest)
  })
_sym_db.RegisterMessage(EchoRequest)

EchoResponse = _reflection.GeneratedProtocolMessageType('EchoResponse', (_message.Message,), {
  'DESCRIPTOR' : _ECHORESPONSE,
  '__module__' : 'echo.v1.echo_pb2'
  # @@protoc_insertion_point(class_scope:skeleton.echo.v1.EchoResponse)
  })
_sym_db.RegisterMessage(EchoResponse)


DESCRIPTOR._options = None

_ECHO = _descriptor.ServiceDescriptor(
  name='Echo',
  full_name='skeleton.echo.v1.Echo',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=137,
  serialized_end=240,
  methods=[
  _descriptor.MethodDescriptor(
    name='Echo',
    full_name='skeleton.echo.v1.Echo.Echo',
    index=0,
    containing_service=None,
    input_type=_ECHOREQUEST,
    output_type=_ECHORESPONSE,
    serialized_options=b'\202\323\344\223\002\022\"\r/echo/v1/echo:\001*',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_ECHO)

DESCRIPTOR.services_by_name['Echo'] = _ECHO

# @@protoc_insertion_point(module_scope)
